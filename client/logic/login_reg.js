try{	//called from register.	//param:userMsgObj is a Object,JSON format?	//userManager.RegisterUser(userMsg);		login_reg.CreateUserService = function(userID){		this.remoteServerAgentObj.setInvoke("getUserInfo");		var userInfo = this.remoteServerAgentObj.getUserInfo(userID);		// console.log(JSON.stringify(userInfo));		selfObj = new userAgent(userInfo, this.remoteServerAgentObj);		Corba.RegisterObject("#test.my_context/delivery.Object#" + userID, selfObj);		selfObj.startSynClock();	}		/**	 * param : handler --- 处理的是GUI.	 * param : userMsgObj --- 用户注册信息.     */	login_reg.registerUser = function(userMsgObj){		var index = this.checkRegInfo(userMsgObj);		if(!index){			console.log(userMsgObj.userName + " register !");			delete userMsgObj.repassword;			this.remoteServerAgentObj.setInvoke("userRegister");			//返回值为0，表示注册成功，否则返回失败原因。失败原因可以通过错误码给出。			var ret = this.remoteServerAgentObj.userRegister(userMsgObj);			console.log("ret :::"+ JSON.stringify(ret));			if(JSON.stringify(ret) == "{}"){				//console.log("register success, enter labby !");				curUser = userMsgObj.userName;				/**				 * 在客户端注册客户端对象.				 * param : userID.				 */				//this.remoteServerAgentObj.setInvoke("getUserID");				//var userID = this.remoteServerAgentObj.getUserID(userName);				userID = curUser;				this.CreateUserService(userID);				Event.Send({							//name : "ui.RegisterSuccess",					name : "ui.JumpInterface",					where : "lobby",					from : "register",					userName : userMsgObj.userName				});							} else {				//console.log("register failed, cause ：" + ret);				for(var i in ret){					//RegisterCheckInfo(false, i, ret[i]);					Event.Send({								name : "ui.RegisterCheckInfo",						state : false,						type : i,						value : ret[i]					});				}				// RegisterCheckInfo(false, "errorRegister", "注册失败 !");				Event.Send({							name : "ui.RegisterCheckInfo",					state : false,					type : "errorRegister",					value : "注册失败 !"				});			}		}	}		//called from login.	login_reg.userLogin = function(userMsgObj) {		var index = false;		var userName = userMsgObj.userName;		var password = userMsgObj.password;		var e;		if(userName == "" && (password == "")){			index = true;			e={						name : "ui.LoginCheckInfo",				state : false,				type : "userName",				value : "* 不能为空！"			};		} 		else if(userName.split(" ").length > 1)		{			index = true;			e = {						name : "ui.LoginCheckInfo",				state : false,				type : "userName",				value : "* 不能有空格！"			};		} 		else 		{			e = {						name : "ui.LoginCheckInfo",				state : false,				type : "userName",				value : ""			};		}		Event.Send(e);		if(password == ""){			index = true;			e = {						name : "ui.LoginCheckInfo",				state : false,				type : "password",				value : "* 不能为空！"			};		} 		else if(password.split(" ").length > 1)		{			index = true;			e = {						name : "ui.LoginCheckInfo",				state : false,				type : "password",				value : "* 不能有空格！"			};		} 		else 		{			e = {						name : "ui.LoginCheckInfo",				state : true,				type : "password",				value : ""			};		}		Event.Send(e);		if(!index){			console.log(userMsgObj.userName + " login !");			this.remoteServerAgentObj.setInvoke("userLogin");			var ret = this.remoteServerAgentObj.userLogin(userName, password);			 // console.log(JSON.stringify(ret));			if(ret == true){												this.remoteServerAgentObj.setInvoke("getUserID");				curUser = this.remoteServerAgentObj.getUserID(userName);				console.log(curUser + " login , enter lobby !");								// 创建selfObj				var userID = curUser;				this.CreateUserService(userID);				// curUser = userMsgObj.userName;				// if((ret.company == "xiongshikuangye") || (ret.company == "huanyutansuo")){					// LoginCheckInfo(true, "lobby", "");					//console.log("before send ui.JumpInterface");					Event.Send({								name : "ui.JumpInterface",						where : "lobby",						from : "login",						userName : userMsgObj.userName,					});					//console.log("end send ui.JumpInterface");				// } else {					// LoginCheckInfo(true, "choose", "");					// Event.Send({								// name : "ui.RegisterSuccess",						// name : "ui.JumpInterface",						// where : "choose",						// from : "login",						// userName : userMsgObj.userName					// });				 // }			} else if(ret == false){				// console.log(ret.company);				// LoginCheckInfo(false, "errorLogin", "帐号或密码错误 !");				Event.Send({							name : "ui.LoginCheckInfo",					state : false,					type : "errorLogin",					value : "帐号或密码错误 !"				});			} else if(ret == "logged"){				//正常情况应该ui显示“已登录”，ui没实现暂时用alert输出该信息				alert("已登录");			}		}			}	// userLogin("admin","123654");		// check vCard	login_reg.getvCard = function(){		this.remoteServerAgentObj.setInvoke("getvCard");		var ret = this.remoteServerAgentObj.getvCard();		return ret;	}	/**	 * 验证注册信息	 */	login_reg.checkRegInfo = function(userMsgObj){		var index = false;		var userName = userMsgObj.userName;		var nickName = userMsgObj.nickName;		var password = userMsgObj.password;		var repassword = userMsgObj.repassword;		var email = userMsgObj.email;		var realName = userMsgObj.realName;		var idCard = userMsgObj.idCard;		var vCard = userMsgObj.vCard;		var today = new Date();	    var curenttime  = today.getFullYear() + "-" +(today.getMonth()+1) 	    + "-" + today.getDate() + " " + today.getHours() + ":" + today.getMinutes() 		+ ":" + today.getSeconds();		userMsgObj.registerTime = curenttime;		//console.log("userMsgObj.curentTime :" + userMsgObj.registerTime);		/**			* check		*/		// userName		if(userName == ""){			index = true;			// RegisterCheckInfo(false, "userName", "* 不能为空！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "userName",				value : "* 不能为空！"			};		} else if(userName.split(" ").length > 1){			index = true;			// RegisterCheckInfo(false, "userName", "* 不能有空格！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "userName",				value : "* 不能有空格！"			};		} else if(!this.matchStr(/^[a-zA-Z][a-zA-Z0-9_]*$/, userName)){			index = true;			// RegisterCheckInfo(false, "userName", "* 必须字母开头，英文和数字均可！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "userName",				value : "* 必须字母开头，英文和数字均可！"			};		} else {			// RegisterCheckInfo(true, "userName", "* 输入正确！");			var e = {						name : "ui.RegisterCheckInfo",				state : true,				type : "userName",				value : "* 输入正确！"			};		}		Event.Send(e);		// nickName		if(nickName == ""){			index = true;			// RegisterCheckInfo(false, "nickName", "* 不能为空！");			var e= {						name : "ui.RegisterCheckInfo",				state : false,				type : "nickName",				value : "* 不能为空！"			};		} else if(nickName.split(" ").length > 1){			index = true;			// RegisterCheckInfo(false, "nickName", "* 不能有空格！");			var e= {						name : "ui.RegisterCheckInfo",				state : false,				type : "nickName",				value : "* 不能有空格！"			};		} else if(!this.matchStr(/^[\u4e00-\u9fa5A-Za-z]{1,}$/, nickName)){ //中英文均可			index = true;			// RegisterCheckInfo(false, "nickName", "* 必须是中文或英文！");			var e= {						name : "ui.RegisterCheckInfo",				state : false,				type : "nickName",				value : "* 必须是中文或英文！"			};		 } else {			// RegisterCheckInfo(true, "nickName", "* 输入正确！");			var e= {						name : "ui.RegisterCheckInfo",				state : true,				type : "nickName",				value : "* 输入正确！"			};		}		Event.Send(e);		// password		if(password == "" && repassword == ""){			index = true;			// RegisterCheckInfo(false, "password", "* 不能为空！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "password",				value : "* 不能为空！"			};		} else if(password.split(" ").length > 1){			index = true;			// RegisterCheckInfo(false, "password", "* 不能有空格！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "password",				value : "* 不能有空格！"			};		} else if(!this.matchStr(/^[A-Za-z0-9]{6,}$/, password)){			index = true;			// RegisterCheckInfo(false, "password", "* 必须为字母或数字，不得少于6位！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "password",				value : "* 必须为字母或数字，不得少于6位！"			};		} else if(password != repassword){			index = true;			// RegisterCheckInfo(true, "password", "");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "password",				value : ""			};			// RegisterCheckInfo(false, "repassword", "* 两次输入密码不一样！");			Event.Send({						name : "ui.RegisterCheckInfo",				state : false,				type : "repassword",				value : "* 两次输入密码不一样！"			});		} else {			// RegisterCheckInfo(true, "password", "* 输入正确！");			var e = {						name : "ui.RegisterCheckInfo",				state : true,				type : "password",				value : "* 输入正确！"			};			Event.Send(e);			// RegisterCheckInfo(true, "repassword", "");			var e = {						name : "ui.RegisterCheckInfo",				state : true,				type : "repassword",				value : ""			};		}		Event.Send(e);		// realName		if(realName == ""){			index = true;			// RegisterCheckInfo(false, "realName", "* 不能为空！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "realName",				value : "* 不能为空！"			};		} else if(realName.split(" ").length > 1){			index = true;			// RegisterCheckInfo(false, "realName", "* 不能有空格！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "realName",				value : "* 不能有空格！"			};		} else if(!this.matchStr(/^[\u4e00-\u9fa5]{1,}$/, realName)){ //必须为中文			index = true;			// RegisterCheckInfo(false, "realName", "* 必须是中文！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "realName",				value : "* 必须是中文！"			};		 } else {			// RegisterCheckInfo(true, "realName", "* 输入正确！");			var e = {						name : "ui.RegisterCheckInfo",				state : true,				type : "realName",				value : "* 输入正确！"			};		}		Event.Send(e);		// email		if(email == ""){			index = true;			// RegisterCheckInfo(false, "email", "* 不能为空！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "email",				value : "* 不能为空！"			};		} else if(email.split(" ").length > 1){			index = true;			// RegisterCheckInfo(false, "email", "* 不能有空格！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "email",				value : "* 不能有空格！"			};		} else if(!this.matchStr(/^([a-zA-Z0-9]+[_|-|.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|-|.]?)*[a-zA-Z0-9]+.[a-zA-Z]{2,3}$/, email)){ 			index = true;			// RegisterCheckInfo(false, "email", "* 不符合格式！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "email",				value : "* 不符合格式！"			};		 } else {			// RegisterCheckInfo(true, "email", "* 输入正确！");			var e = {						name : "ui.RegisterCheckInfo",				state : true,				type : "email",				value : "* 输入正确！"			};		}		Event.Send(e);		// idCard		if(idCard == ""){			index = true;			// RegisterCheckInfo(false, "idCard", "* 不能为空！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "idCard",				value : "* 不能为空！"			};		} else if(idCard.split(" ").length > 1){			index = true;			// RegisterCheckInfo(false, "idCard", "* 不能有空格！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "idCard",				value : "* 不能有空格！"			};		} else if(!this.matchStr(/^(\d{14}|\d{17})(\d|[X])$/, idCard)){			index = true;			// RegisterCheckInfo(false, "idCard", "* 必须是15位或18位数字！");			var e = {					name : "ui.RegisterCheckInfo",				state : false,				type : "idCard",				value : "* 必须是15位或18位数字,字母要大写！"			};		} else {			// RegisterCheckInfo(true, "idCard", "* 输入正确！");			var e = {						name : "ui.RegisterCheckInfo",				state : true,				type : "idCard",				value : "* 输入正确！"			};		}		Event.Send(e);		// vCard		if(vCard == ""){			index = true;			// RegisterCheckInfo(false, "vCard", "* 不能为空！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "vCard",				value : "* 不能为空！"			};		} else if(vCard.split(" ").length > 1){			index = true;			// RegisterCheckInfo(false, "vCard", "* 不能有空格！");			var e = {						name : "ui.RegisterCheckInfo",				state : false,				type : "vCard",				value : "* 不能有空格！"			};		} else {			// RegisterCheckInfo(true, "vCard", "* 输入正确！");			var e = {						name : "ui.RegisterCheckInfo",				state : true,				type : "vCard",				value : "* 输入正确！"			};		}		Event.Send(e);		return index;	}		// 正则表达式	login_reg.matchStr = function(reg, str){		var result =  reg.exec(str);		for(var i in result){			if(result[i] == str){				return true;				break;			}		}		return false;	}		/**	 * 判断是跳转进入创建角色还是进入大厅	 * 已没有该步骤	 */	login_reg.RoleOrLabby = function(){		this.remoteServerAgentObj.setInvoke("getUserState");		var ret = this.remoteServerAgentObj.getUserState();		for(var i in ret){			console.log(i + " : " + ret[i]);		}		return ret;	}		// 选择公司	login_reg.ChooseCompany = function(userName, firm){		//console.log("chooseCompany : " + firm);		this.remoteServerAgentObj.chooseCompany(userName, firm);		Event.Send({			name : "ui.enterLobby",			userName : userName		});	}	} catch(e){	alert("err : " + e);}